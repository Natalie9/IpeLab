{"version":3,"sources":["assets/images/Logo_IPElab.png","assets/images/logo.png","pages/Landing/index.tsx","components/PageHeader/index.tsx","pages/ContactRegister/index.tsx","components/ContactItem/index.tsx","pages/ContactList/index.tsx","routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Landing","id","className","src","logoImg","alt","to","style","fontSize","PageHeader","props","logo","title","children","ContactRegister","ContactItem","ContactList","htmlFor","type","Routes","path","exact","component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.efa929cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo_IPElab.710c395a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.243fcdd6.png\";","import React from 'react'\r\nimport Search from '@material-ui/icons/Search'\r\nimport PermContactCalendar from '@material-ui/icons/PermContactCalendar'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport logoImg from '../../assets/images/Logo_IPElab.png'\r\n\r\nimport './styles.css'\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div id='page-landing'>\r\n      <div id='page-landing-content' className='container'>\r\n        <div className='logo-container'>\r\n          <img src={logoImg} alt='' className='logo-img' />\r\n\r\n          <h2 className='descricao'>\r\n            Ideias, Prototipagem e Empreendedorismo{' '}\r\n          </h2>\r\n        </div>\r\n        <div className='buttons-container'>\r\n          <Link to='/cadastrar' className='register'>\r\n            <PermContactCalendar style={{ fontSize: 32 }} />\r\n            Registrar\r\n          </Link>\r\n          <Link to='/buscar' className='search'>\r\n            <Search style={{ fontSize: 32 }} />\r\n            Buscar\r\n          </Link>\r\n        </div>\r\n        <span className='total-connections'>\r\n          Total de 200 conexões já realizadas\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Landing\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\nimport logo from '../../assets/images/logo.png'\r\n\r\nimport './styles.css'\r\n\r\ninterface PageHeaderProps {\r\n    title : string;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = (props) => {\r\n  return (\r\n    <header className='page-header'>\r\n      <div className='top-bar-container'>\r\n        <Link to='/'>\r\n          <ArrowBack style={{ fontSize: 32 }}></ArrowBack>\r\n        </Link>\r\n\r\n        <img src={logo} alt='logo ipe lab' />\r\n      </div>\r\n\r\n      <div className='header-content'>\r\n        <strong>{props.title}</strong>\r\n        {props.children}\r\n      </div>\r\n\r\n      \r\n    </header>\r\n  )\r\n}\r\n\r\nexport default PageHeader\r\n","import React from 'react'\r\nimport PageHeader from '../../components/PageHeader'\r\n\r\nimport './styles.css'\r\n\r\nfunction ContactRegister() {\r\n  return (\r\n    <div id='page-contact-register'>\r\n      <PageHeader title='Cadastrar um novo contato'></PageHeader>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactRegister\r\n","import React from 'react'\r\n\r\nimport './styles.css'\r\n\r\n\r\nfunction ContactItem\r\n() {\r\n  return (\r\n      <article className='contact-item'>\r\n        <header>\r\n          <img\r\n            src='https://avatars0.githubusercontent.com/u/22748356?s=460&u=d78701bdee95869e4c57f9fbad4c24567a4c3e64&v=4'\r\n            alt='Natalie Tolentino'\r\n          />\r\n          <div>\r\n            <strong>Natalie Tolentino</strong>\r\n            <span>Programação</span>\r\n          </div>\r\n        </header>\r\n        <p>\r\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n          <br />\r\n          <br />\r\n          Repudiandae molestiae nisi veritatis! Pariatur similique sunt eaque\r\n          quod ducimus provident nulla explicabo. Provident, reiciendis!\r\n        </p>\r\n        <footer>\r\n          <p>\r\n            Disponibilidade\r\n            <strong>02 horas/semana</strong>\r\n          </p>\r\n          <button>\r\n            <img\r\n              src='https://logodownload.org/wp-content/uploads/2015/04/whatsapp-logo-icone-1.png'\r\n              alt='Whatsapp'\r\n            />\r\n            Entrar em contato\r\n          </button>\r\n        </footer>\r\n      </article>\r\n  )\r\n}\r\n\r\nexport default ContactItem\r\n\r\n","import './styles.css'\r\n\r\nimport React from 'react'\r\n\r\nimport PageHeader from '../../components/PageHeader'\r\nimport ContactItem from '../../components/ContactItem'\r\n\r\nfunction ContactList() {\r\n  return (\r\n    <div id='page-contact-list' className='container'>\r\n      <PageHeader title='Estes são os contatos disponíveis'>\r\n        <form id='search-contacts'>\r\n          <div className='input-block'>\r\n            <label htmlFor='skill'>Habilidade</label>\r\n            <input type='text' id='skill' />\r\n          </div>\r\n\r\n          <div className='input-block'>\r\n            <label htmlFor='category'>Catergoria</label>\r\n            <input type='text' id='category' />\r\n          </div>\r\n        </form>\r\n      </PageHeader>\r\n\r\n      <main>\r\n        <ContactItem></ContactItem>\r\n        <ContactItem></ContactItem>\r\n        <ContactItem></ContactItem>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactList\r\n","import React from 'react'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport Landing from './pages/Landing'\r\nimport ContactRegister from './pages/ContactRegister'\r\nimport ContactList from './pages/ContactList'\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path='/' exact component={Landing} />\r\n      <Route path='/cadastrar' exact component={ContactRegister} />\r\n      <Route path='/buscar' exact component={ContactList} />\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\nimport './assets/styles/global.css'\nimport Landing from './pages/Landing'\nimport Routes from './routes'\n\n\n\nfunction App() {\n  return (\n    <Routes></Routes>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}